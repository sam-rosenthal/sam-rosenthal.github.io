(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[6],{239:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return ae}));var n=a(0),l=a.n(n),r=a(241),o=a(44),s=a(136),i=a(131),c=a(130),h=a(135),m=a(47),u=a(233),p=a(234),g=a(149),d=a(235),b=a(143),E=a(236),S=a(126),f=a(14),w=a(242),v=a(103),y=a(134),T=a(219),C=a.n(T),k=a(220),I=a.n(k),P=a(182),x=a.n(P),A=a(199),R=Object(A.autoPlay)(x.a),J=Object(S.a)((function(e){return{root:{maxWidth:400,flexGrow:1},header:{display:"flex",alignItems:"center",height:50,paddingLeft:e.spacing(2),backgroundColor:"#e0e0e0"},img:{maxHeight:255,display:"block",maxWidth:400,overflow:"hidden",width:"100%"}}}));function B(e){var t=J(),a=Object(f.a)(),n=l.a.useState(0),r=Object(m.a)(n,2),s=r[0],i=r[1],c=e.images.length;return 0===c?l.a.createElement(l.a.Fragment,null):l.a.createElement("div",{className:t.root},l.a.createElement(v.a,{square:!0,elevation:0,className:t.header},l.a.createElement(o.a,null,e.images[s].label)),l.a.createElement(R,{axis:"rtl"===a.direction?"x-reverse":"x",index:s,onChangeIndex:function(e){i(e)},enableMouseEvents:!0},e.images.map((function(e,a){return l.a.createElement("div",{key:e.label},Math.abs(s-a)<=2?l.a.createElement("img",{className:t.img,src:e.imgPath,alt:e.label}):null)}))),c>1?l.a.createElement(w.a,{style:{background:"#e0e0e0"},steps:c,position:"static",variant:"text",activeStep:s,nextButton:l.a.createElement(y.a,{size:"small",onClick:function(){i((function(e){return e+1}))},disabled:s===c-1},"Next","rtl"===a.direction?l.a.createElement(C.a,null):l.a.createElement(I.a,null)),backButton:l.a.createElement(y.a,{size:"small",onClick:function(){i((function(e){return e-1}))},disabled:0===s},"rtl"===a.direction?l.a.createElement(I.a,null):l.a.createElement(C.a,null),"Back")}):l.a.createElement(l.a.Fragment,null))}var M=a(243);function G(e){return l.a.createElement(l.a.Fragment,null,e.data.map((function(e){return null!=e.icon?l.a.createElement(M.a,{key:e.label,avatar:l.a.createElement(g.a,{variant:"square",src:e.icon}),component:"a",target:"_blank",label:e.label,clickable:!0,style:{margin:"2px"}}):l.a.createElement(M.a,{key:e.label,component:"a",target:"_blank",label:e.label,clickable:!0})})))}function _(e){var t=l.a.useState(!1),a=Object(m.a)(t,2),n=a[0],r=a[1];return l.a.createElement(i.a,{item:!0,id:e.id},l.a.createElement(u.a,null,l.a.createElement(p.a,{title:""!==e.header.href?l.a.createElement(s.a,{href:e.header.href,target:"_blank",variant:"h4"},e.header.title):l.a.createElement(o.a,{variant:"h4"},e.header.title),subheader:e.header.date,avatar:l.a.createElement(g.a,{variant:"rounded",src:e.header.icon}),style:{paddingBottom:"0px"}}),l.a.createElement("div",{style:{marginLeft:"56px",paddingTop:"0px"}},l.a.createElement(d.a,null,e.body,l.a.createElement(b.a,{component:"ul",style:{paddingLeft:"0px",marginTop:"8px"}},null!==e.techDetails&&l.a.createElement(o.a,{variant:"h6"},l.a.createElement(s.a,{component:"button",variant:"body1",onClick:function(){r(!n)}},l.a.createElement("b",null,!1===n?"Show":"Hide"," technology details"))),l.a.createElement(G,e.techIcons)),l.a.createElement(E.a,{in:n,timeout:"auto",unmountOnExit:!0},l.a.createElement(o.a,{variant:"h6"},l.a.createElement("b",null,"Technologies details:")),e.techDetails),l.a.createElement(B,e.carouselImages)))))}var O=a(221),j=a(222),D=a(223),L=a(224),U=a(225),H=a(226);function q(e,t,a,n,l){return{month:e,visitors:t,countries:a,totalVisits:n,averageVisitTime:l}}var N=[q("September (2018)",72,17,100,34),q("October (2018)",118,20,163,12),q("November (2018)",126,26,152,43),q("December (2018)",160,24,184,45),q("January (2019)",240,57,283,35),q("Febuary (2019)",239,56,288,43),q("March (2019)",296,57,360,50),q("April (2019)",284,55,355,43),q("May (2019)",346,63,445,75),q("June (2019)",231,51,300,49),q("July (2019)",314,52,397,42),q("August (2019)",364,55,503,107),q("September (2019)",339,55,429,31),q("October (2019)",361,62,482,49),q("November (2019)",375,66,471,61),q("December (2019)",336,62,398,51),q("January (2020)",400,61,443,29),q("Febuarary (2020)",322,57,386,31),q("March (2020)",283,55,353,22),q("April (2020)",342,52,412,26),q("May (2020)",345,55,417,32),q("June (2020)",396,65,494,48)],F=Object(S.a)({container:{maxHeight:300}});function W(){var e=F();return l.a.createElement(O.a,{component:v.a,className:e.container},l.a.createElement(j.a,{stickyHeader:!0,size:"small"},l.a.createElement(D.a,null,l.a.createElement(L.a,null,l.a.createElement(U.a,{align:"center"},"Month"),l.a.createElement(U.a,{align:"center"},"Visitors"),l.a.createElement(U.a,{align:"center"},"Countries of Visitors"),l.a.createElement(U.a,{align:"center"},"Total Visits"),l.a.createElement(U.a,{align:"center"},"Average Visit Time (secs)"))),l.a.createElement(H.a,null,N.map((function(e){return l.a.createElement(L.a,{key:e.month},l.a.createElement(U.a,{align:"center"},e.month),l.a.createElement(U.a,{align:"center"},e.visitors),l.a.createElement(U.a,{align:"center"},e.countries),l.a.createElement(U.a,{align:"center"},e.totalVisits),l.a.createElement(U.a,{align:"center"},e.averageVisitTime))})))))}function z(){var e=l.a.useState(!1),t=Object(m.a)(e,2),a=t[0],n=t[1];return l.a.createElement(_,{id:"javaOSS",header:{href:"https://github.com/sam-rosenthal/java-cssSelector-to-xpath",title:"java-cssSelector-to-xpath OSS Project",date:"June 2018 - Present",icon:"".concat("https://sam-rosenthal.github.io","/favBig.png")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,"I developed this Open Source Software (",l.a.createElement(s.a,{href:"https://github.com/sam-rosenthal/java-cssSelector-to-xpath/blob/samdev/License.txt",target:"_blank"},"MIT License"),") which is written in Java and converts CSS Selector Strings to XPath Strings. Running this software in 3rd-party packages requires no additional external jar files.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("b",null,"Summer 2020:")," Implemented a major upgrade to capabilities of the OSS by adding the following pseudo classes: nth-of-type, nth-last-of-type, nth-child, nth-last-child. ",l.a.createElement("br",null),l.a.createElement(s.a,{component:"button",variant:"body1",onClick:function(){n(!a)}},l.a.createElement("b",null,"New psuedo class implementation notes"))),l.a.createElement(E.a,{in:a,timeout:"auto",unmountOnExit:!0},l.a.createElement(o.a,null,"A"," ",l.a.createElement(s.a,{href:"https://github.com/sam-rosenthal/java-cssSelector-to-xpath/blob/master/src/main/java/org/sam/rosenthal/cssselectortoxpath/model/CssPsuedoClassType.java",target:"_blank"},"conditional algorithm")," ","was developed that handled all valid input expressions (odd, even, xn+y) for the new pseudo-classes. Implementing this algorithm, required looking into the behavior of the psudo class which was affected the relationship between the signs and magnitudes of x and y. Odd and even cases were implemented by applying the algorithm to 2n+1 and 2n respectively. After generating the algorithm for nth-of-type, nth-last-of-type was simply the reverse. Nth-of-child and nth-last-of-child was nearly the same except"," ","<element>",":nth-of-type(","<element>",") was replaced with *:nth-of-type(","<element>",")."))," "),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/eclipse.png"),label:"Eclipse"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/java.png"),label:"JDK8"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/maven.png"),label:"Maven"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/regex.png"),label:"Regular Expressions"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/junit.png"),label:"JUnit"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/git.png"),label:"Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/tortoiseGit.png"),label:"Tortoise Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/github.png"),label:"Github"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/travis.png"),label:"Travis CI"}]},techDetails:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement("b",null,"Regular Expressions")," - Java Regex Utility classes were used to validate and parse the CSS Selector strings. I used the Matcher and Pattern classes to parse the selector into elements, attribute names, and attributes that make up the components of the CSS Selector String. Once the string was broken into its components it was straight forward to reconstruct the corresponding XPath String. Listed are some Regular Expressions that were used to identify CSS Selector components:"),l.a.createElement("div",{style:{backgroundColor:"#e0e0e0"}},l.a.createElement("code",null,'private static final String QUOTES_RE = "([\\"\\\'])"; ',l.a.createElement("br",null),'private static final String ATTRIBUTE_VALUE_RE = "([-_.#a-zA-Z0-9:\\\\/ ]+)";',l.a.createElement("br",null),'private static final String ATTRIBUTE_VALUE_RE_NO_SPACES = "([-_.#a-zA-Z0-9:\\\\/]+)";',l.a.createElement("br",null),'private static final String ELEMENT_ATTRIBUTE_NAME_RE="(-?[_a-zA-Z]+[_a-zA-Z0-9-]*)"; ',l.a.createElement("br",null),'private static final String STARTING_ELEMENT_RE = "^("+ELEMENT_ATTRIBUTE_NAME_RE+"|([*]))?";',l.a.createElement("br",null),'private static final String PSUEDO_RE = "(:[a-z][a-z\\\\-]*([(][^)]+[)])?)";',l.a.createElement("br",null))),l.a.createElement(o.a,null,"Regular expressions were also used when calling the Java replaceAll String method. A simple example of a regex expression that was used to remove white spaces was:"),l.a.createElement("code",{style:{backgroundColor:"#e0e0e0"}}," ",'selectorString=selectorString.replaceAll("\\\\s+","");'),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"Recursion"),' - A basic CSS Selector is made up of (0 or 1) elements associated with (0 or more) attributes. A basic CSS Selector can have a "combinator" relationship with another CSS selector which then can have a "combinator" relationship with another CSS Selector which ... This is the "cascading" relationship of CSS. This pattern lent itself to recursion. I created a recursive method, recursiveSelectorSplit, which takes a basic selector and looks for a combinator. If it finds one it adds the element/combinator pair to a list of these pairs and calls itself to find the next cascading relationship. The recursion is complete when there are no more "combinators".'),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://junit.org/junit4/",target:"_blank"},"Junit Testing"))," ","- Individual classes and methods, end-to-end testing (CSS input String to XPath output String), invalid CSS Selector Strings, and unsupported CSS Selector Strings are all tested using the JUnit test framework. I currently have 19 JUnit tests and over 310 individual test cases and growing."," "),l.a.createElement("hr",null),l.a.createElement(o.a,null," ",l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://www.seleniumhq.org/",target:"_blank"},"Selenium Testing"))," ","- I used Selenium testing to verify that the actual output of my CSS Selector converter is producing correct and valid XPaths. Please see"," ",l.a.createElement(s.a,{href:"#java-cssSelector-to-xpath-website-technology-details"},"Selenium testing details")," of the CSS Selector to XPath Converter Website."),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"GitHub, Git,"," ",l.a.createElement(s.a,{href:"https://tortoisegit.org/",target:"_blank"},"Tortoise Git"))," ","- Used Git as my version control system. GitHub was my code repository. Used Eclipse's Git-plugin and Tortoise Git to manage my source code on my development PC."),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://maven.apache.org/",target:"_blank"},"Apache Maven"))," ","- Used Maven as the build automation tool. Configured POM file to pull all required software and dependencies. The POM file also included plugins to run unit and integration (Selenium) tests. Maven was used for development, continuous integration, and deployment of the software."," "),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"Continuous Integration")," - Continuous Integration - Used"," ",l.a.createElement(s.a,{href:"https://travis-ci.org/",target:"_blank"},"Travis CI")," ","as the continuous integration service for this project. When changes are committed to GitHub (Branches and Master), the CI pipeline is started. The code is checked out from Github, compiled, and all unit tests are run.",l.a.createElement("i",null,"Note: I have set up all Selenium tests as integration-tests so they are not run as part of CI.")),l.a.createElement("hr",null)),carouselImages:{images:[{label:"Github ReadMe",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/OSS/Code/GitReadme.png")}]}})}function X(){return l.a.createElement(_,{id:"converterWebsite",header:{href:"https://css-selector-to-xpath.appspot.com/",title:"CSS Selector to XPath Converter Website",date:"July 2018 - Present",icon:"".concat("https://sam-rosenthal.github.io","/favBig.png")},body:l.a.createElement(o.a,null,"Free online CSS Selector to XPath converter. This tool uses java-cssSelector-to-xpath OSS to transform CSS Selector strings to XPath strings."),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/react.png"),label:"React"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/typescript.png"),label:"Typescript"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/html.png"),label:"HTML 5"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/css.png"),label:"CSS 3"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/gcp.png"),label:"Google Cloud Platform"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/vscode.png"),label:"Visual Studio"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/eslint.png"),label:"ESLint"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/prettier.png"),label:"Prettier"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/reactrouter.png"),label:"React Router"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/npm.png"),label:"npm"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/reactbootstrap.png"),label:"React Bootstrap"},{icon:null,label:"Axios"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/java.png"),label:"JDK8"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/spring.png"),label:"Spring Boot"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/selenium.png"),label:"Selenium"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/junit.png"),label:"JUnit"},{icon:null,label:"Jetty HTTPClient"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/maven.png"),label:"Maven"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/eclipse.png"),label:"Eclipse"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/git.png"),label:"Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/tortoisegit.png"),label:"Tortoise Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/github.png"),label:"Github"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/debian.png"),label:"Debian Linux"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/analytics.png"),label:"Google Analytics"}]},techDetails:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://wicket.apache.org/",target:"_blank"},"React (Summer 2020 \u2013 Present)"))," ","- For the summer of 2020, I rewrote the entire website in React using"," ",l.a.createElement(s.a,{href:"https://www.typescriptlang.org/",target:"_blank"},"Typescript.")," ","My development environment included Visual Studio Code with"," ",l.a.createElement(s.a,{href:"https://eslint.org/",target:"_blank"},"ESLint")," ","for static code analysis and environment and"," ",l.a.createElement(s.a,{href:"https://eslint.org/",target:"_blank"},"Prettier")," ","for code formatting. I used"," ",l.a.createElement(s.a,{href:"https://www.npmjs.com/",target:"_blank"},"npm")," ","to locally install packages and to run the web application. The website consists of two pages, the main page which has the convert functionality and the test page which consists of test cases used by selenium test. Since this was a multi-page website, I used react-router for navigation. I used"," ",l.a.createElement(s.a,{href:"https://spring.io/projects/spring-boot",target:"_blank"},"Spring Boot")," ","to provide REST Services. The website made REST calls to convert CSS Selector strings to Xpaths, retrieve the website version number, and retrieve the content of the test page. I used Axios for the asynchronous REST calls. Data from asynchronous responses was rendered by updates to the corresponding state. For the converter POST request, I handled the following three conditions:"),l.a.createElement("ul",{style:{margin:"0px"}},l.a.createElement("li",null,"HTTP Status code of 200 = a valid request. The REST response contained the equivalent XPath string which was rendered in the results table."),l.a.createElement("li",null,"HTTP Status code 400 = an invalid request. The REST response contained an error message explaining why the CSS Selector String could not be converted to an XPath String which was rendered in the results table."),l.a.createElement("li",null,"All other codes = unexpected error responses. A generic message with the status code and text was rendered in the results table. I used react-bootstrap as the front-end framework for this website."," ")),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://spring.io/projects/spring-boot",target:"_blank"},"Spring Boot (Summer 2020)"))," ","- Created a Spring application that extended SpringBootServletInitializer to provide REST Services for my OSS converter website and to render React website as a static website. I created a class that used the Spring @RestController annotation that provided the following REST services:",l.a.createElement("ul",{style:{margin:"0px"}},l.a.createElement("li",null,"Endpoint: /Convert",l.a.createElement("ul",null,l.a.createElement("li",null,"Request type: POST"),l.a.createElement("li",null,"Request body (Spring @RequestBody): JSON String that maps to CssSelectorIn class"),l.a.createElement("li",null,"Response body (Spring @ ResponseBody ): JSON String which that maps to an XpathOut object if the CSS Selector was successfully converted to an XPath, otherwise it maps to an InvalidCssSelector object."))),l.a.createElement("li",null,"Endpoint : /testcases",l.a.createElement("ul",null,l.a.createElement("li",null,"Request type: GET"),l.a.createElement("li",null,"Response body (Spring @ResponseBody): JSON String corresponding to a list of BassCssSelectorToXpathTestCase objects o The REST service returns the test cases displayed in the"," ",l.a.createElement(s.a,{href:"https://css-selector-to-xpath.appspot.com/TestPage",target:"_blank"},"TestPage")))),l.a.createElement("li",null,"Endpoint: /version",l.a.createElement("ul",null,l.a.createElement("li",null,"Request type: GET"),l.a.createElement("li",null,"Response body (Spring @ResponseBody): JSON String corresponding to the version number")))),"Due to Spring being used to render the React application as a static website (required for deployment in GCP), Spring was intercepting the /TestPage request before it could be handled by react-router. I created a class that used the Spring @Controller annotation to handle this issue. The controller returned Index.html, the static page of React, so that the router could give the appearance of navigating to the test page, when in fact it maintained the current page, just with updated content."),l.a.createElement("hr",null),l.a.createElement(o.a,null," ",l.a.createElement("b",null,"Selenium Testing")," - I implemented two types of Selenium Testing. The obvious testing is to verify that my CSS Selector to XPath website is working properly. My tests also verify that the actual output of my CSS Selector converter is producing correct and valid XPaths. ",l.a.createElement("br",null)," ",l.a.createElement("br",null),"All Selenium tests are driven by the JUnit test framework. I test 3 browsers: Chrome, FireFox, and Edge."," ",l.a.createElement("i",null,"Note: I developed on a Windows PC and that's why I chose those three browsers to test. "),"My first set of Selenium tests verify that all expected text is displayed on my the converter website. I verify that all links work and bring up the expected websites on a new tab. Through automated Selenium testing, I verify that the expected results are properly displayed when CSS selectors are entered and the convert button is pressed. I also check when invalid CSS Selectors are entered that the proper error messages are displayed. I created an abstract Selenium test class that is extended by all tests. The abstract class includes setting up the browser, specific drivers, methods to go to website URLs, test text and links, entering text, pressing the convert button, and error messages. ",l.a.createElement("br",null),l.a.createElement("br",null),'The second type of Selenium test verifies that my OSS software correctly converts CSS Selectors. Selenium can identify elements of a webpage by either CSS Selectors or XPaths. I have written all the Selenium tests exclusively using Selenium\'s "By.cssSelector" method. I then rerun the tests using the same code except for the following change: the original test CSS Selector input is converted using my OSS software to an XPath which is then passed in as the argument for the "By.xpath" method. Both versions of the Selenium test work on all three browser types, demonstrating that the converter software is working properly. The final "special" test checks the contents of a (',l.a.createElement(s.a,{href:"https://css-selector-to-xpath.appspot.com/css-selector-to-xpath-reference-cases",target:"_blank"},"test webpage"),") constructed with the same base-case CSS Selectors defined in a JUnit test written for the OSS converter software. The Selenium test and the JUnit test use the same inputs and outputs as part of this special test.",l.a.createElement("br",null),l.a.createElement("br",null),"The following is how I implemented the By.cssSelector and By.xpath Selenium tests:",l.a.createElement("br",null),"The abstract Selenium class has the following method:"),l.a.createElement("div",{style:{backgroundColor:"#e0e0e0"}},l.a.createElement("code",null,"protected By getBy(String cssSelector) { ",l.a.createElement("br",null),"\xa0\xa0\xa0return By.cssSelector(cssSelector); ",l.a.createElement("br",null)," }")),l.a.createElement(o.a,null,"The By.xpath tests override this method with:"),l.a.createElement("div",{style:{backgroundColor:"#e0e0e0"}},l.a.createElement("code",null,"@Override protected By getBy(String cssSelector) { ",l.a.createElement("br",null),"\xa0\xa0\xa0String xpath = null; ",l.a.createElement("br",null),"\xa0\xa0\xa0try { ",l.a.createElement("br",null),"\xa0\xa0\xa0\xa0\xa0\xa0 xpath = converter.convertCssSelectorStringToXpathString(cssSelector);",l.a.createElement("br",null)," \xa0\xa0 } ",l.a.createElement("br",null),"\xa0\xa0\xa0catch (CssSelectorToXPathConverterException e) { ",l.a.createElement("br",null),"\xa0\xa0\xa0\xa0\xa0\xa0 throw new RuntimeException(e); ",l.a.createElement("br",null)," \xa0\xa0 } ",l.a.createElement("br",null),'\xa0\xa0\xa0System.out.println("original cssSelector="+cssSelector+", using xpath="+xpath);',l.a.createElement("br",null),"\xa0\xa0\xa0return By.xpath(xpath);",l.a.createElement("br",null)," }")),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"JUnit Testing of Spring REST Services")," - I used"," ",l.a.createElement(s.a,{href:"https://www.eclipse.org/jetty/documentation/current/http-client.html",target:"_blank"},"Jetty HttpClient")," ","to create a REST client for unit testing. All the original java-css-to-xpath unit tests were run using REST calls instead of java api function calls. To startup the Spring Rest Server used by the JUnit test, I called the Java Process class to run the REST service in its own JVM and remapped its stdout and stderr back to the JUnit test\u2019s streams. I also wrote additional unit tests to test the /version and /testcases REST endpoint."),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://console.cloud.google.com/appengine",target:"_blank"},"GCP App Engine"))," ","- Used"," ",l.a.createElement(s.a,{href:"https://console.cloud.google.com",target:"_blank"}," ","Google Cloud Platform's App Engine")," ","to host CSS Selector to XPath Converter Website. I created a GCP account and project. I used GCP's suite tools to deploy, monitor, and manage the website."),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://www.debian.org/",target:"_blank"},"Linux (Debian)"))," ","- Used Google's Cloud Shell (a bash shell) to compile, test deploy, and deploy webapp on the GCP App Engine."),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://analytics.google.com/",target:"_blank"},"Google Analytics"))," ","- Used Google Analytics to track progress and monitor website's traffic. The traffic statistics for the first four months that my website was up and running was as follows:"," "),l.a.createElement(W,null),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"GitHub, Git, Apache Maven, Continuous Integration")," - This Website's source code is maintained as part of the java-csSelector-to-xpath repository (See previous section for details)"," "),l.a.createElement("hr",null),l.a.createElement(o.a,null,l.a.createElement("b",null,l.a.createElement(s.a,{href:"https://wicket.apache.org/",target:"_blank"},"Apache Wicket (July 2018 - Spring 2020)"))," ","- Used Wicket as the web application framework for the website. I modified one of Wicket's example programs,",l.a.createElement(s.a,{href:"http://examples8x.wicket.apache.org/echo/",target:"_blank"}," ","echo"," ")," ","which consisted of a text field and a submit button. Since Wicket uses HTML file for templating, I was able to easily add custom static content, including links, to the website."," "),l.a.createElement("hr",null)),carouselImages:{images:[{label:"Website",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/OSS/Website/Website.JPG")},{label:"Hosted on Google Cloud Platform",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/OSS/Website/GCP.JPG")},{label:"Google Analyrics Homepage",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/OSS/Website/Analytics.JPG")},{label:"Google Analytics World Map",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/OSS/Website/Map.JPG")}]}})}function V(){return l.a.createElement(_,{id:"personalWebsite",header:{href:"",title:"Personal Website",date:"July 2018 - Present",icon:"".concat("https://sam-rosenthal.github.io","/favicon-32x32.png")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,{gutterBottom:!0},"This responsive website was developed from without templates or publishing tools."," "),l.a.createElement(o.a,null,l.a.createElement("b",null,"Summer 2020:")," Rebuilt whole website with React and Typescript. My development environment included Visual Studio Code with"," ",l.a.createElement(s.a,{href:"https://eslint.org/",target:"_blank"},"ESLint")," ","for static code analysis and environment and"," ",l.a.createElement(s.a,{href:"https://eslint.org/",target:"_blank"},"Prettier")," ","for code formatting. I used"," ",l.a.createElement(s.a,{href:"https://www.npmjs.com/",target:"_blank"},"npm")," ","MaterialUi was used as the front-end component library. JSX was used to build React components. Used React hooks to update states for dynamic content inside function components. Utilized Javascript for conditional rendering. React Router provided navigation for the single-page static website."),l.a.createElement(o.a,null,l.a.createElement("b",null,"First iteration:")," Wrote website in HTML using Eclipse as my editor. Used Bootstrap as the front-end component library, Javascript and jQuery to provide additional dynamic behavior, and Font-Awesome for some icons. Used CSS to style and format page content.")),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/react.png"),label:"React"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/typescript.png"),label:"Typescript"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/html.png"),label:"HTML 5"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/css.png"),label:"CSS 3"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/material.png"),label:"Material UI"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/vscode.png"),label:"Visual Studio"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/eslint.png"),label:"ESLint"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/prettier.png"),label:"Prettier"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/reactrouter.png"),label:"React Router"},{icon:null,label:"JSX"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/npm.png"),label:"npm"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/git.png"),label:"Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/tortoisegit.png"),label:"Tortoise Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/github.png"),label:"Github"}]},techDetails:null,carouselImages:{images:[]}})}function Q(){return l.a.createElement(_,{id:"tns",header:{href:"https://tnsi.com/",title:"Software Intern",date:"Transaction Network Services | Summer 2020",icon:"".concat("https://sam-rosenthal.github.io","/Screenshots/TNS/TNS.png")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement("b",null,"Overview"))," ",l.a.createElement(o.a,{gutterBottom:!0},"Worked as a member of TNS\u2019 Call Guardian team. Stabilized, expanded test coverage, and refactored/cleaned up code for TNSI\u2019s SPTF (standard portal test framework) automation tests in Selenium. Modularized test scripts with a python script to aid organization and debugging. Learned domain expertise in the telecommunications industry and TNS\u2019 Call Guardian application used by Verizon."),l.a.createElement(o.a,null,l.a.createElement("b",null,"Project Details:")),l.a.createElement(o.a,{gutterBottom:!0},"I worked on revamping automated tests for the Call Guardian portal. Reported analysis of reocurring failures. Records had millions of call logs, Fixed tests so that they would pass as well as be stable for the consistanly changing data. ir thelped develop a framework for testing the end-to-end flow of HSAPI. Three test-suites were created, one for each type of home insurance Homesite provides (homeowners, renters, condos)."),l.a.createElement(o.a,{gutterBottom:!0},"To analyze sources of the errors, developed Python scripts to efficiently find error message, cause of error, test that failed, and line number of the failure. Modularized test scripts by writing a python script to grab all required tests from data file."),l.a.createElement(o.a,{gutterBottom:!0},"Oracle SQL server database was used to store user information and website data. Insertions, deletions, and updates on the portal were validated with DB calls. Oracle SQL Server Management was the IDE used to query and update the databases."),l.a.createElement(o.a,{gutterBottom:!0}),l.a.createElement(o.a,{gutterBottom:!0}),l.a.createElement(o.a,null,l.a.createElement("b",null,"Testing Software Approach"))," ",l.a.createElement(o.a,{gutterBottom:!0},"Followed an Agile software development approach consisting of three-week sprints with 2x/week scrum meetings and post sprint review meetings. Used Jira to record progress and organize tasks. Continuous integration used a Jenkins pipeline to run and verify all tests on a nightly basis."),l.a.createElement(o.a,{gutterBottom:!0},"Jenkins was used was the IDE used in software development of the automated test framework. Test cases were written using Groovy. Test cases made REST calls to HSAPI via SoapUI. Groovy parser classes were created to convert JSON responses into a HashMap (using JsonSlurper). The classes included getter methods to retrieve all insurance information. All parser classes extended an abstract base class that was created to handle general information that appeared in every response, such as: SessionID, HttpStatusCode, RequiremenMessage, etc."),l.a.createElement(o.a,null,l.a.createElement("b",null,"Software tools")),l.a.createElement(o.a,null,"Used the following software tools:"),l.a.createElement("ul",{style:{margin:"0px",paddingLeft:"20px"}},l.a.createElement("li",null,l.a.createElement("b",null,"Selenium")," for automated testing"),l.a.createElement("li",null,l.a.createElement("b",null,"Git")," for version control"),l.a.createElement("li",null,l.a.createElement("b",null,"Jenkins")," for CI/CD"),l.a.createElement("li",null,l.a.createElement("b",null,"Jira")," for project management"),l.a.createElement("li",null,l.a.createElement("b",null,"Agile methodology")," for software development"),l.a.createElement("li",null,l.a.createElement("b",null,"ORACLE DB Management")," as the SQL IDE"),l.a.createElement("li",null,l.a.createElement("b",null,"Python")," for text scripting"),l.a.createElement("li",null,l.a.createElement("b",null,"Jupyter notebook")," as the IDE for python"),l.a.createElement("li",null,l.a.createElement("b",null,"Microsoft Teams")," as the communications platform"))),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/selenium.png"),label:"Selenium"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/git.png"),label:"Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/jenkins.png"),label:"Jenkins"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/jira.png"),label:"Jira"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/oracle.png"),label:"ORACLE DB Management"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/vscode.png"),label:"Visual Studio"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/Python.png"),label:"Python"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/jupyter.png"),label:"Jupyter notebook"}]},techDetails:null,carouselImages:{images:[{label:"Website Ui",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/WebsiteUI.png")},{label:"ReadyApi Interface",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/ReadyApi.png")},{label:"BitBucket",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/BitBucket.png")},{label:"Microsoft SQL Management Server",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/SQL.png")}]}})}function Z(){return l.a.createElement(_,{id:"homesite",header:{href:"https://go.homesite.com/",title:"Software Development Engineer in Test (SDET) Intern",date:"Homesite Group | Summer 2019",icon:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/Homesite.png")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement("b",null,"Overview"))," ",l.a.createElement(o.a,{gutterBottom:!0},"Worked as a member of Homesite's QA Automation team. Built a testing framework for Homesite's home-insurance quoting REST API (HSAPI) with"," ",l.a.createElement(s.a,{href:"https://smartbear.com/product/ready-api/overview/?utm_source=aw&utm_medium=ppcs&utm_campaign=brand-readyapi&utm_content=trial&utm_term=readyapi&gclid=CjwKCAjwkenqBRBgEiwA-bZVtlOr-1LlZ_Se9URk0-Ov8z1j2ptj_eOBV2tAwd4-iVdAuXuoeYUC1RoCt_EQAvD_BwE",target:"_blank"}," ","ReadyAPI"),". The testing framework is the initial step to replace the current legacy API testing framework. I learned domain expertise on home insurance underwriting and Homesite's business model to provide insurance for their partners and customers. At the end of the summer I studied and passed the"," ",l.a.createElement(s.a,{href:"https://www.soapui.org/professional/soapui-pro.html",target:"_blank"},"SoapUI Pro"),l.a.createElement(s.a,{href:"sam/SoapUIProCertificate.pdf",target:"_blank"},"Certification"),", the primary tool used in the framework I worked on."," "),l.a.createElement(o.a,null,l.a.createElement("b",null,"Project Details")),l.a.createElement(o.a,{gutterBottom:!0},'I helped develop a framework for testing the end-to-end flow of HSAPI. Three test-suites were created, one for each type of home insurance Homesite provides (homeowners, renters, condos). Each test-suite included test cases that would send all HTTP requests (Post, Put, and Get) required for retrieving and purchasing a quote. Since home insurance laws vary by state, each suite ran multiple times with the necessary input data to generate a quote. Every JSON HTTP response was verified to contain a valid http status code of 200 and a "RequirementMessage" of "ok". Note: when a request had missing requirements the requirement message would have details on missing data.'),l.a.createElement(o.a,{gutterBottom:!0},"ReadyAPI was the IDE used in software development of the automated test framework. Test cases were written using Groovy. Test cases made REST calls to HSAPI via SoapUI. Groovy parser classes were created to convert JSON responses into a HashMap (using JsonSlurper). The classes included getter methods to retrieve all insurance information. All parser classes extended an abstract base class that was created to handle general information that appeared in every response, such as: SessionID, HttpStatusCode, RequiremenMessage, etc."),l.a.createElement(o.a,{gutterBottom:!0},"Microsoft SQL server database was used to enable the test framework to be dynamic and data driven. To generate each JSON HTTP request, two tables were queried. The first table would return the JSON keys and the second table return the JSON values. Microsoft SQL Server Management was the IDE used to query and update the databases."),l.a.createElement(o.a,null,l.a.createElement("b",null,"Testing Software Approach"))," ",l.a.createElement(o.a,{gutterBottom:!0},"Followed a pseudo-agile software development approach. Participated in week-long sprints. Used Jira to organize and manage a backlog of stories and Confluence to provide overall project status and milestones. Development branches were managed by BitBucket. Continuous integration used a Jenkins pipeline to run and verify all tests."," "),l.a.createElement(o.a,null,l.a.createElement("b",null,"Documentation")),l.a.createElement(o.a,null,"Wrote a test plan using Confluence to outline our testing approach. The test plan consisted of the following:"),l.a.createElement("ul",{style:{marginTop:"0px",paddingLeft:"20px"}},l.a.createElement("li",null,"A vision statement and purpose statement for the product as understood by QA"),l.a.createElement("li",null,"Test request/response product flows"," ",l.a.createElement("ul",{style:{paddingLeft:"20px"}},l.a.createElement("li",null,"HSAPI quote creation, retrieval, and purchace for homeowners, renters, and condos insurance"))),l.a.createElement("li",null,"Test Resource constraints"," ",l.a.createElement("ul",{style:{paddingLeft:"20px"}},l.a.createElement("li",null,"Release deadlines, software licenses, personnel"))),l.a.createElement("li",null,"Test Roles and responsibilities of the test team"),l.a.createElement("li",null,"Test Approach describes the testing tools used and the testing methodology")),l.a.createElement(o.a,null,"QA Automation's coding standards required all Groovy scripts to include Groovydoc. Class documentation overviewed the class functionality. Method documentation described the method and the definition of all inputs and outputs."),l.a.createElement("br",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"Software tools")),l.a.createElement(o.a,null,"Used the following software tools:"),l.a.createElement("ul",{style:{margin:"0px",paddingLeft:"20px"}},l.a.createElement("li",null,l.a.createElement("b",null,"ReadyAPI & SoapUI")," for automated testing"),l.a.createElement("li",null,l.a.createElement("b",null,"BitBucket and Git")," for software configuration management"),l.a.createElement("li",null,l.a.createElement("b",null,"Visual Studio Code")," as the IDE for Groovy"),l.a.createElement("li",null,l.a.createElement("b",null,"Jira")," for project management"),l.a.createElement("li",null,l.a.createElement("b",null,"Microsoft SQL Server Management")," as the SQL IDE"),l.a.createElement("li",null,l.a.createElement("b",null,"Confluence")," as the documentation and knowledge management system"),l.a.createElement("li",null,l.a.createElement("b",null,"Microsoft Teams")," as the communications platform"),l.a.createElement("li",null,l.a.createElement("b",null,"Jenkins")," for continuous integration ",l.a.createElement("i",null,"(this was incorporated at the end of the internship)")))),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/soapui.png"),label:"Soap UI Pro"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/readyapi.png"),label:"ReadyApi"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/groovy.png"),label:"Groovy"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/git.png"),label:"Git"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/bitBucket.png"),label:"BitBucket"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/confluence.png"),label:"Confluence"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/jira.png"),label:"Jira"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/vscode.png"),label:"Visual Studio"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/json.png"),label:"JSON"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/microsoftsql.png"),label:"Microsoft SQL Server"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/jenkins.png"),label:"Jenkins"}]},techDetails:null,carouselImages:{images:[{label:"Website Ui",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/WebsiteUI.png")},{label:"ReadyApi Interface",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/ReadyApi.png")},{label:"BitBucket",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/BitBucket.png")},{label:"Microsoft SQL Management Server",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/Homesite/SQL.png")}]}})}function K(){return l.a.createElement(_,{id:"tic",header:{href:"http://ticcamp.com/",title:"Camp Programming Counselor",date:"TIC Summer Camp | Summer 2017, 2018",icon:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/TIC.png")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,"Taught Java and"," ",l.a.createElement(s.a,{href:"https://www.terrapinlogo.com/",target:"_blank"},"Terrapin Logo")," ","programming to campers ages 7 to 14. Worked with groups of 2-4 campers to develop games and applications."," ",l.a.createElement("br",null)," ",l.a.createElement("br",null)," Java programs were written in Swing and utilized"," ",l.a.createElement(s.a,{href:"https://processing.org/",target:"_blank"},"Processing"),"'s graphic framework. Graphical programs would often use AWT Graphics, AWT Shapes, BufferedIO, ImageIO, events, and event listeners. Text-based programs would use Scanner and JOptionPanes. All software developement was written using the Eclipse IDE. Campers typically had 0-3 years of prior java programming experience.",l.a.createElement("br",null)," ",l.a.createElement("br",null),"Logo programs were written using"," ",l.a.createElement(s.a,{href:"http://www.microworlds.com/solutions/mwex.html",target:"_blank"},"Microworlds EX IDE"),". All programs used the"," ",l.a.createElement(s.a,{href:"https://en.wikipedia.org/wiki/Turtle_graphics",target:"_blank"},"turtle-graphics")," ","as the graphical user interface. Programs involved working with graphical templates and creating rules and procedures. Campers typically had 0-1 years of Logo programming experience.")),techIcons:{data:[{icon:"".concat("https://sam-rosenthal.github.io","/techicons/eclipse.png"),label:"Eclipse"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/java.png"),label:"JDK8"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/processing.png"),label:"Processing"},{icon:"".concat("https://sam-rosenthal.github.io","/techicons/microworlds.ico"),label:"Microworlds"},{icon:null,label:"Terrapin Logo"}]},techDetails:null,carouselImages:{images:[{label:"Tron (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/Tron.png")},{label:"1v1 Doodle Jump (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/DoodleJump.png")},{label:"Chicken Little (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/Chicken.png")},{label:"Surrealifier (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/Surrealifier.png")},{label:"Pong (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/Pong.png")},{label:"Trivia Quiz (Java)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/Java/Quiz.png")},{label:"Crossy Road (logo)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/logo/CrossyRoad.png")},{label:"Firefront (logo)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/logo/Firefront.png")},{label:"Trivia (logo)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/logo/Trivia.png")},{label:"Maze Man (logo)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/logo/MazeMan.png")},{label:"Jaguars (logo)",imgPath:"".concat("https://sam-rosenthal.github.io","/Screenshots/TIC/logo/Jaguar.png")}]}})}function Y(){return l.a.createElement(_,{id:"cornell",header:{href:"https://www.cs.cornell.edu/",title:"Cornell University, College of Engineering",date:"Computer Science B.S. | August 2017 - May 2021",icon:"".concat("https://sam-rosenthal.github.io","/Screenshots/Cornell/Cornell.svg")},body:l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement("b",null,"Junior Year (Fall 2019-Spring 2020)"))," ",l.a.createElement(o.a,null,l.a.createElement("b",null,"CS 4300"),": Into to Database Systems; ",l.a.createElement("b",null,"CS 4820"),": Intro Analysis of Algorithms; ",l.a.createElement("b",null,"CS 2850"),": Networks; ",l.a.createElement("b",null,"CS 3300"),": Data Driven Web Applications; ",l.a.createElement("b",null,"CS 4300"),": Language and Information;"," ",l.a.createElement("b",null,"CS 4700"),": Foundations of Artificial Intelligence; ",l.a.createElement("b",null,"CS 3420"),": Embedded Systems;"),l.a.createElement(h.a,null),l.a.createElement("br",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"Sophomore Year (Fall 2018-Spring 2019)"))," ",l.a.createElement(o.a,null,l.a.createElement("b",null,"CS 2110"),": Object-Oriented Programming and Data Structures (Java); ",l.a.createElement("b",null,"CS 2800"),": Discrete Structures; ",l.a.createElement("b",null,"ECE 2300"),": Digital Logic and Computer Organization",l.a.createElement("br",null),l.a.createElement("b",null,"CS 3110"),": Data Structures and Functional Programming",l.a.createElement("br",null)," Functional programming in OCaml. Had weekly assignments in groups of 2-3. Assignments enforced Test Driven Development. Assignments included writing an Enigma machine, a text-based adventure game, search engine for text documents, a RML Interpreter, etc. Extensively used GitHub to code with group members. Final project was open-ended and consisted of two weekly sprints. Our group implemented a battleship with extra features and three levels of AI."),l.a.createElement(h.a,null),l.a.createElement("br",null),l.a.createElement(o.a,null,l.a.createElement("b",null,"Freshman Year (Fall 2017-Spring 2018)")),l.a.createElement(o.a,null,l.a.createElement("b",null,"CS 1110"),": Introduction to Computing Using Python; ",l.a.createElement("b",null,"CS 1132"),": Short Course in MATLAB;"," ",l.a.createElement("b",null,"ENGRG/MAE 1112"),": Practical Computing for Engineering Applications of Matlab; ",l.a.createElement("br",null))),techIcons:{data:[]},techDetails:null,carouselImages:{images:[]}})}function $(e,t,a){return{href:e,label:t,key:a}}var ee=[$("#personal","Personal Projects",0),$("#work","Internships",1),$("#school","Education",2)];function te(e,t,a){return l.a.createElement(i.a,{item:!0,style:{textAlign:"center"},id:e},0!==a&&l.a.createElement(c.a,null),l.a.createElement(o.a,{component:"h1",variant:"h2"},t),(n=a,l.a.createElement(r.a,{separator:"|","aria-label":"breadcrumb",style:{display:"inline-grid"}},ee.map((function(e,t){return n===t?l.a.createElement(o.a,{color:"textPrimary",key:e.key},e.label):l.a.createElement(s.a,{color:"inherit",href:e.href,key:e.key},e.label)})))),l.a.createElement(h.a,null));var n}function ae(){return l.a.createElement(i.a,{container:!0,direction:"column",justify:"center",spacing:3,style:{textAlign:"left"}},te("personal","Personal Projects",0),l.a.createElement(z,null),l.a.createElement(X,null),l.a.createElement(V,null),te("work","Internships",1),l.a.createElement(Q,null),l.a.createElement(Z,null),l.a.createElement(K,null),te("school","Education",2),l.a.createElement(Y,null))}}}]);
//# sourceMappingURL=6.e3bf5717.chunk.js.map