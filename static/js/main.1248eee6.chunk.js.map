{"version":3,"sources":["components/Nav/Navbar.tsx","components/Nav/SamCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","flexGrow","zIndex","drawer","menuButton","textAlign","marginRight","spacing","color","contactme","marginLeft","indicator","background","tabText","fontFamily","samButton","backgroundColor","textTransform","textDecoration","alignSelf","samBox","display","width","height","alignItems","justifyContent","tab","borderRight","Navbar","pathname","classes","location","useLocation","Hidden","mdDown","AppBar","className","position","Toolbar","Grid","container","justify","item","md","sm","component","Link","to","Box","Typography","variant","Tabs","value","aria-label","Tab","icon","label","style","borderLeft","Tooltip","title","Button","href","target","minWidth","lgUp","smDown","sam","box","marginTop","drawerLg","flexShrink","drawerPaperLg","palette","default","drawerPaper","whitesmoke","empty","SamCard","React","useState","open","setOpen","currentPage","setCurrentPage","handleDrawerClose","DrawerContent","Divider","Avatar","alt","src","Nav","List","paddingTop","key","map","index","text","ListItem","button","RouterLink","process","onClick","ListItemIcon","ListItemText","primary","Drawer","paper","anchor","ModalProps","keepMounted","onClose","mdUp","IconButton","edge","Home","lazy","About","Projects","Skills","Resume","content","createMuiTheme","typography","main","responsiveFontSizes","App","basename","ThemeProvider","Container","fallback","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1248eee6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Tooltip, Grid, Theme, Box, Hidden } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// let theme = createMuiTheme();\r\n// theme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      flexGrow: 1,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n      textAlign: 'center',\r\n      marginRight: theme.spacing(3),\r\n      color: '#fafafa',\r\n    },\r\n    contactme: {\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n    indicator: {\r\n      background: '#fafafa',\r\n    },\r\n    tabText: {\r\n      color: '#fafafa',\r\n      fontFamily: 'Raleway',\r\n    },\r\n    samButton: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n      textTransform: 'none',\r\n      textDecoration: 'none',\r\n      alignSelf: 'stretch',\r\n    },\r\n    samBox: {\r\n      display: 'flex',\r\n      width: '100%',\r\n      height: '100%',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    tab: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n      borderRight: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Navbar(): JSX.Element {\r\n  const classes = useStyles();\r\n  const location = useLocation().pathname;\r\n\r\n  function getValue(pathname: string): number | boolean {\r\n    // console.log(pathname);\r\n    if (pathname === '/') {\r\n      return false;\r\n    } else if (pathname === '/About') {\r\n      return 0;\r\n    } else if (pathname === '/Projects') {\r\n      return 1;\r\n    } else if (pathname === '/Skills') {\r\n      return 2;\r\n    } else if (pathname === '/Resume') {\r\n      return 3;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden mdDown>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"primary\">\r\n          <Toolbar>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={3} sm={12} component={Link} to=\"/\" className={classes.samButton}>\r\n                <Box className={classes.samBox}>\r\n                  <Typography className={classes.menuButton} component=\"h1\" variant=\"h4\" color=\"primary\">\r\n                    {/* <b style={{ fontFamily: 'Raleway' }}> */}\r\n                    Sam Rosenthal\r\n                    {/* </b> */}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={7} sm={12}>\r\n                <Tabs\r\n                  value={getValue(location)}\r\n                  aria-label=\"tabs example\"\r\n                  variant=\"scrollable\"\r\n                  classes={{\r\n                    indicator: classes.indicator,\r\n                  }}\r\n                  className={classes.tabText}\r\n                >\r\n                  <Tab\r\n                    icon={<PersonIcon />}\r\n                    label=\"About\"\r\n                    component={Link}\r\n                    to=\"/About\"\r\n                    className={classes.tab}\r\n                    style={{ borderLeft: '1px solid rgba(0, 0, 0, 0.12)' }}\r\n                  />\r\n                  <Tab\r\n                    icon={<WorkOutlineOutlinedIcon />}\r\n                    label=\"Projects\"\r\n                    component={Link}\r\n                    to=\"/Projects\"\r\n                    className={classes.tab}\r\n                  />\r\n                  <Tab icon={<ComputerIcon />} label=\"Skills\" component={Link} to=\"/Skills\" className={classes.tab} />\r\n                  <Tab\r\n                    icon={<DescriptionOutlinedIcon />}\r\n                    label=\"Resume\"\r\n                    component={Link}\r\n                    to=\"/Resume\"\r\n                    className={classes.tab}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n              <Grid item md={2} sm={12}>\r\n                <Box display=\"flex\" justifyContent=\"flex-end\" className={classes.contactme}>\r\n                  <Tooltip title=\"Email me\">\r\n                    <Button\r\n                      aria-label=\"email\"\r\n                      href=\"mailto:ser259@cornell.edu\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <EmailIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"LinkedIn\">\r\n                    <Button\r\n                      aria-label=\"linkedIn\"\r\n                      href=\"https://www.linkedin.com/in/sam-rosenthal-1ab870155/\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <LinkedInIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Github\">\r\n                    <Button\r\n                      aria-label=\"github\"\r\n                      href=\"https://github.com/sam-rosenthal\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <GitHubIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <Hidden lgUp smDown>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={Link}\r\n              to=\"/\"\r\n              className={classes.samButton}\r\n              style={{ color: '#fafafa', fontFamily: 'Raleway' }}\r\n            >\r\n              <b>Sam Rosenthal</b>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Box,\r\n  Avatar,\r\n  Drawer,\r\n  Toolbar,\r\n  Hidden,\r\n  AppBar,\r\n  IconButton,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  Link,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    icon: {\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20),\r\n    },\r\n    sam: {\r\n      textAlign: 'center',\r\n      fontFamily: 'lato',\r\n      // marginTop: theme.spacing(5),\r\n    },\r\n    box: {\r\n      // marginRight: theme.spacing(3),\r\n      marginTop: theme.spacing(1.5),\r\n      textAlign: 'center',\r\n      fontFamily: 'raleway',\r\n    },\r\n    drawerLg: {\r\n      width: 'calc(25% + 12px)',\r\n      flexShrink: 0,\r\n      minWidth: '250px',\r\n      borderRight: 'none',\r\n    },\r\n    drawerPaperLg: {\r\n      width: 'calc(25% + 12px)',\r\n      minWidth: '250px',\r\n      background: theme.palette.background.default,\r\n      borderRight: 'none',\r\n    },\r\n    drawer: {\r\n      width: 'calc(25% + 24px)',\r\n      flexShrink: 0,\r\n      minWidth: '250px',\r\n    },\r\n    drawerPaper: {\r\n      width: 'calc(25% + 24px)',\r\n      minWidth: '250px',\r\n      background: theme.palette.background.default,\r\n    },\r\n    appBar: {\r\n      flexGrow: 1,\r\n      zIndex: 1301,\r\n    },\r\n    whitesmoke: {\r\n      color: 'whitesmoke',\r\n    },\r\n    empty: {},\r\n    samButton: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n      textTransform: 'none',\r\n      textDecoration: 'none',\r\n      alignSelf: 'stretch',\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function SamCard(): JSX.Element {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [currentPage, setCurrentPage] = React.useState(-1);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function DrawerContent(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Toolbar />\r\n        <Divider />\r\n        <br />\r\n        <Box className={classes.box}>\r\n          <div style={{ justifyContent: 'center', display: 'flex', alignItems: 'center' }}>\r\n            <Avatar\r\n              alt=\"Sam Rosenthal\"\r\n              src=\"https://media-exp1.licdn.com/dms/image/C5603AQGPOB4oIPPhQg/profile-displayphoto-shrink_200_200/0?e=1600300800&v=beta&t=XCP-y3rjz9_20hyRJ1ReHdEcoy8Tapa9cHKmGJKutvA\"\r\n              className={classes.icon}\r\n            />\r\n          </div>\r\n          <Typography component=\"h3\" variant=\"h5\">\r\n            <b>Software Engineer</b>\r\n          </Typography>\r\n\r\n          <Typography component=\"h4\" variant=\"h6\">\r\n            Cornell University '21\r\n          </Typography>\r\n          <Typography component=\"h4\" variant=\"subtitle1\">\r\n            <Link href=\"mailto:ser259@cornell.edu\" target=\"_blank\">\r\n              ser259@cornell.edu\r\n            </Link>{' '}\r\n          </Typography>\r\n        </Box>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function Nav(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Divider />\r\n        <List style={{ paddingTop: '0px' }}>\r\n          {[\r\n            [<PersonIcon key=\"0\" />, 'About'],\r\n            [<WorkOutlineOutlinedIcon key=\"1\" />, 'Projects'],\r\n            [<ComputerIcon key=\"2\" />, 'Skills'],\r\n            [<DescriptionOutlinedIcon key=\"3\" />, 'Resume'],\r\n          ].map(([icon, text], index) => (\r\n            <ListItem\r\n              button\r\n              key={index}\r\n              component={RouterLink}\r\n              to={process.env.PUBLIC_URL + '/' + text}\r\n              onClick={() => {\r\n                handleDrawerClose();\r\n                setCurrentPage(index);\r\n              }}\r\n              style={{ background: currentPage === index ? '#b21919' : 'inherit' }}\r\n            >\r\n              <ListItemIcon className={currentPage === index ? classes.whitesmoke : classes.empty}>{icon}</ListItemIcon>\r\n              <ListItemText className={currentPage === index ? classes.whitesmoke : classes.empty} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n          <Divider />\r\n        </List>\r\n\r\n        <Box style={{ textAlign: 'center' }}>\r\n          <Tooltip title=\"Email me\">\r\n            <Button\r\n              aria-label=\"email\"\r\n              href=\"mailto:ser259@cornell.edu\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <EmailIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"LinkedIn\">\r\n            <Button\r\n              aria-label=\"linkedIn\"\r\n              href=\"https://www.linkedin.com/in/sam-rosenthal-1ab870155/\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <LinkedInIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Github\">\r\n            <Button\r\n              aria-label=\"github\"\r\n              href=\"https://github.com/sam-rosenthal\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <GitHubIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden mdDown>\r\n        <Navbar />\r\n        <Drawer\r\n          className={classes.drawerLg}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaperLg,\r\n          }}\r\n          anchor=\"left\"\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          color=\"default\"\r\n        >\r\n          <DrawerContent />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgUp smDown>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={RouterLink}\r\n              to={process.env.PUBLIC_URL + '/'}\r\n              onClick={() => setCurrentPage(-1)}\r\n              className={classes.samButton}\r\n              style={{ color: '#fafafa', fontFamily: 'Raleway', alignSelf: 'center' }}\r\n            >\r\n              <b>Sam Rosenthal</b>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n          className={classes.drawer}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          color=\"default\"\r\n        >\r\n          <DrawerContent />\r\n          <Nav />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={() => {\r\n                setOpen(!open);\r\n              }}\r\n              edge=\"start\"\r\n              style={{ color: '#fafafa' }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={RouterLink}\r\n              to={process.env.PUBLIC_URL + '/'}\r\n              style={{ color: '#fafafa' }}\r\n              onClick={() => {\r\n                handleDrawerClose();\r\n                setCurrentPage(-1);\r\n              }}\r\n            >\r\n              Sam Rosenthal\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          className={classes.drawer}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          color=\"default\"\r\n        >\r\n          <Divider />\r\n          <DrawerContent />\r\n          <Nav />\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n}\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport SamCard from './components/Nav/SamCard';\r\nimport { Container, makeStyles, createStyles, Toolbar, ThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nconst Home = lazy(() => import('./components/Welcome/Welcome'));\r\nconst About = lazy(() => import('./components/About/About'));\r\nconst Projects = lazy(() => import('./components/Projects/Projects'));\r\nconst Skills = lazy(() => import('./components/Skills/Skills'));\r\nconst Resume = lazy(() => import('./components/Resume/Resume'));\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    content: {\r\n      flexGrow: 1,\r\n      textAlign: 'center',\r\n      fontFamily: 'lato',\r\n    },\r\n  }),\r\n);\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: 'lato',\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#b21919',\r\n    },\r\n  },\r\n});\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction App(): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%' }}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ThemeProvider theme={theme}>\r\n          {/* <Navbar /> */}\r\n          <SamCard />\r\n          <Container className={classes.content}>\r\n            <Toolbar />\r\n            <br />\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/About\" component={About} />\r\n                <Route path=\"/Projects\" component={Projects} />\r\n                <Route path=\"/Skills\" component={Skills} />\r\n                <Route path=\"/Resume\" component={Resume} />\r\n              </Switch>\r\n            </Suspense>\r\n          </Container>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}