{"version":3,"sources":["components/Navbar.tsx","components/SamCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","flexGrow","zIndex","drawer","menuButton","textAlign","marginRight","spacing","color","contactme","marginLeft","indicator","background","tabText","fontFamily","samButton","backgroundColor","textTransform","textDecoration","alignSelf","samBox","display","width","height","alignItems","justifyContent","tab","Navbar","pathname","classes","location","useLocation","Hidden","mdDown","AppBar","className","position","Toolbar","Grid","container","justify","item","md","sm","component","Link","to","Box","Typography","variant","Tabs","value","aria-label","Divider","orientation","flexItem","Tab","icon","label","Tooltip","title","Button","href","target","style","minWidth","lgUp","smDown","sam","box","marginTop","drawerLg","flexShrink","borderRight","drawerPaperLg","palette","default","drawerPaper","whitesmoke","empty","SamCard","React","useState","open","setOpen","currentPage","setCurrentPage","handleDrawerClose","DrawerContent","Avatar","alt","src","Nav","List","paddingTop","key","map","index","text","ListItem","button","RouterLink","onClick","ListItemIcon","ListItemText","primary","Drawer","paper","anchor","ModalProps","keepMounted","onClose","mdUp","IconButton","edge","Home","lazy","About","Projects","Skills","Resume","content","createMuiTheme","typography","main","responsiveFontSizes","App","ThemeProvider","Container","fallback","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6124d119.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Tooltip, Grid, Theme, Divider, Box, Hidden } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// let theme = createMuiTheme();\r\n// theme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      flexGrow: 1,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n      textAlign: 'center',\r\n      marginRight: theme.spacing(3),\r\n      color: '#fafafa',\r\n    },\r\n    contactme: {\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n    indicator: {\r\n      background: '#fafafa',\r\n    },\r\n    tabText: {\r\n      color: '#fafafa',\r\n      fontFamily: 'Raleway',\r\n    },\r\n    samButton: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n      textTransform: 'none',\r\n      textDecoration: 'none',\r\n      alignSelf: 'stretch',\r\n    },\r\n    samBox: {\r\n      display: 'flex',\r\n      width: '100%',\r\n      height: '100%',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    tab: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Navbar(): JSX.Element {\r\n  const classes = useStyles();\r\n  // const location = useLocation().pathname;\r\n\r\n  const location = useLocation().pathname;\r\n\r\n  function getValue(pathname: string): number | boolean {\r\n    // console.log(pathname);\r\n    if (pathname === '/') {\r\n      return false;\r\n    } else if (pathname === '/About') {\r\n      return 1;\r\n    } else if (pathname === '/Projects') {\r\n      return 3;\r\n    } else if (pathname === '/Skills') {\r\n      return 5;\r\n    } else if (pathname === '/Resume') {\r\n      return 7;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  // console.log(location);\r\n  // console.log(getValue(location));\r\n\r\n  return (\r\n    <>\r\n      <Hidden mdDown>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"primary\">\r\n          <Toolbar>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={3} sm={12} component={Link} to=\"/\" className={classes.samButton}>\r\n                <Box className={classes.samBox}>\r\n                  <Typography className={classes.menuButton} component=\"h1\" variant=\"h4\" color=\"primary\">\r\n                    {/* <b style={{ fontFamily: 'Raleway' }}> */}\r\n                    Sam Rosenthal\r\n                    {/* </b> */}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={7} sm={12}>\r\n                <Tabs\r\n                  value={getValue(location)}\r\n                  aria-label=\"tabs example\"\r\n                  variant=\"scrollable\"\r\n                  classes={{\r\n                    indicator: classes.indicator,\r\n                  }}\r\n                  className={classes.tabText}\r\n                >\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                  <Tab icon={<PersonIcon />} label=\"About\" component={Link} to=\"/About\" className={classes.tab} />\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                  <Tab\r\n                    icon={<WorkOutlineOutlinedIcon />}\r\n                    label=\"Projects\"\r\n                    component={Link}\r\n                    to=\"/Projects\"\r\n                    className={classes.tab}\r\n                  />\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                  <Tab icon={<ComputerIcon />} label=\"Skills\" component={Link} to=\"/Skills\" className={classes.tab} />\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                  <Tab\r\n                    icon={<DescriptionOutlinedIcon />}\r\n                    label=\"Resume\"\r\n                    component={Link}\r\n                    to=\"/Resume\"\r\n                    className={classes.tab}\r\n                  />\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                </Tabs>\r\n              </Grid>\r\n              <Grid item md={2} sm={12}>\r\n                <Box display=\"flex\" justifyContent=\"flex-end\" className={classes.contactme}>\r\n                  <Tooltip title=\"Email me\">\r\n                    <Button\r\n                      aria-label=\"email\"\r\n                      href=\"mailto:ser259@cornell.edu\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <EmailIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"LinkedIn\">\r\n                    <Button\r\n                      aria-label=\"linkedIn\"\r\n                      href=\"https://www.linkedin.com/in/sam-rosenthal-1ab870155/\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <LinkedInIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Github\">\r\n                    <Button\r\n                      aria-label=\"github\"\r\n                      href=\"https://github.com/sam-rosenthal\"\r\n                      target=\"_blank\"\r\n                      style={{ minWidth: '24px', color: '#fafafa' }}\r\n                    >\r\n                      <GitHubIcon />\r\n                    </Button>\r\n                  </Tooltip>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <Hidden lgUp smDown>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={Link}\r\n              to=\"/\"\r\n              className={classes.samButton}\r\n              style={{ color: '#fafafa', fontFamily: 'Raleway' }}\r\n            >\r\n              <b>Sam Rosenthal</b>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Box,\r\n  Avatar,\r\n  Drawer,\r\n  Toolbar,\r\n  Hidden,\r\n  AppBar,\r\n  IconButton,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  Link,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    icon: {\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20),\r\n    },\r\n    sam: {\r\n      textAlign: 'center',\r\n      fontFamily: 'lato',\r\n      // marginTop: theme.spacing(5),\r\n    },\r\n    box: {\r\n      // marginRight: theme.spacing(3),\r\n      marginTop: theme.spacing(1.5),\r\n      textAlign: 'center',\r\n      fontFamily: 'raleway',\r\n    },\r\n    drawerLg: {\r\n      width: 'calc(25% + 12px)',\r\n      flexShrink: 0,\r\n      minWidth: '250px',\r\n      borderRight: 'none',\r\n    },\r\n    drawerPaperLg: {\r\n      width: 'calc(25% + 12px)',\r\n      minWidth: '250px',\r\n      background: theme.palette.background.default,\r\n      borderRight: 'none',\r\n    },\r\n    drawer: {\r\n      width: 'calc(25% + 24px)',\r\n      flexShrink: 0,\r\n      minWidth: '250px',\r\n    },\r\n    drawerPaper: {\r\n      width: 'calc(25% + 24px)',\r\n      minWidth: '250px',\r\n      background: theme.palette.background.default,\r\n    },\r\n    appBar: {\r\n      flexGrow: 1,\r\n      zIndex: 1301,\r\n    },\r\n    whitesmoke: {\r\n      color: 'whitesmoke',\r\n    },\r\n    empty: {},\r\n    samButton: {\r\n      '&:hover': {\r\n        backgroundColor: '#7b0000',\r\n      },\r\n      textTransform: 'none',\r\n      textDecoration: 'none',\r\n      alignSelf: 'stretch',\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function SamCard(): JSX.Element {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [currentPage, setCurrentPage] = React.useState(-1);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function DrawerContent(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Toolbar />\r\n        <Divider />\r\n        <br />\r\n        <Box className={classes.box}>\r\n          <div style={{ justifyContent: 'center', display: 'flex', alignItems: 'center' }}>\r\n            <Avatar\r\n              alt=\"Sam Rosenthal\"\r\n              src=\"https://media-exp1.licdn.com/dms/image/C5603AQGPOB4oIPPhQg/profile-displayphoto-shrink_200_200/0?e=1600300800&v=beta&t=XCP-y3rjz9_20hyRJ1ReHdEcoy8Tapa9cHKmGJKutvA\"\r\n              className={classes.icon}\r\n            />\r\n          </div>\r\n          <Typography component=\"h3\" variant=\"h5\">\r\n            <b>Software Engineer</b>\r\n          </Typography>\r\n\r\n          <Typography component=\"h4\" variant=\"h6\">\r\n            Cornell University '21\r\n          </Typography>\r\n          <Typography component=\"h4\" variant=\"subtitle1\">\r\n            <Link href=\"mailto:ser259@cornell.edu\" target=\"_blank\">\r\n              ser259@cornell.edu\r\n            </Link>{' '}\r\n          </Typography>\r\n        </Box>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function Nav(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Divider />\r\n        <List style={{ paddingTop: '0px' }}>\r\n          {[\r\n            [<PersonIcon key=\"0\" />, 'About'],\r\n            [<WorkOutlineOutlinedIcon key=\"1\" />, 'Projects'],\r\n            [<ComputerIcon key=\"2\" />, 'Skills'],\r\n            [<DescriptionOutlinedIcon key=\"3\" />, 'Resume'],\r\n          ].map(([icon, text], index) => (\r\n            <ListItem\r\n              button\r\n              key={index}\r\n              component={RouterLink}\r\n              to={'/' + text}\r\n              onClick={() => {\r\n                handleDrawerClose();\r\n                setCurrentPage(index);\r\n              }}\r\n              style={{ background: currentPage === index ? '#b21919' : 'inherit' }}\r\n            >\r\n              <ListItemIcon className={currentPage === index ? classes.whitesmoke : classes.empty}>{icon}</ListItemIcon>\r\n              <ListItemText className={currentPage === index ? classes.whitesmoke : classes.empty} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n          <Divider />\r\n        </List>\r\n\r\n        <Box style={{ textAlign: 'center' }}>\r\n          <Tooltip title=\"Email me\">\r\n            <Button\r\n              aria-label=\"email\"\r\n              href=\"mailto:ser259@cornell.edu\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <EmailIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"LinkedIn\">\r\n            <Button\r\n              aria-label=\"linkedIn\"\r\n              href=\"https://www.linkedin.com/in/sam-rosenthal-1ab870155/\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <LinkedInIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Github\">\r\n            <Button\r\n              aria-label=\"github\"\r\n              href=\"https://github.com/sam-rosenthal\"\r\n              target=\"_blank\"\r\n              onClick={handleDrawerClose}\r\n              color=\"primary\"\r\n            >\r\n              <GitHubIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden mdDown>\r\n        <Navbar />\r\n        <Drawer\r\n          className={classes.drawerLg}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaperLg,\r\n          }}\r\n          anchor=\"left\"\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          color=\"default\"\r\n        >\r\n          <DrawerContent />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgUp smDown>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={RouterLink}\r\n              to=\"/\"\r\n              onClick={() => setCurrentPage(-1)}\r\n              className={classes.samButton}\r\n              style={{ color: '#fafafa', fontFamily: 'Raleway', alignSelf: 'center' }}\r\n            >\r\n              <b>Sam Rosenthal</b>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n          className={classes.drawer}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          color=\"default\"\r\n        >\r\n          <DrawerContent />\r\n          <Nav />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <AppBar className={classes.appBar} color=\"primary\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={() => {\r\n                setOpen(!open);\r\n              }}\r\n              edge=\"start\"\r\n              style={{ color: '#fafafa' }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component={RouterLink}\r\n              to=\"/\"\r\n              style={{ color: '#fafafa' }}\r\n              onClick={() => {\r\n                handleDrawerClose();\r\n                setCurrentPage(-1);\r\n              }}\r\n            >\r\n              Sam Rosenthal\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          className={classes.drawer}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          color=\"default\"\r\n        >\r\n          <Divider />\r\n          <DrawerContent />\r\n          <Nav />\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n}\r\n","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SamCard from './components/SamCard';\nimport { Container, makeStyles, createStyles, Toolbar, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { responsiveFontSizes } from '@material-ui/core/styles';\n\nconst Home = lazy(() => import('./Home'));\nconst About = lazy(() => import('./components/About'));\nconst Projects = lazy(() => import('./components/Projects'));\nconst Skills = lazy(() => import('./components/Skills'));\nconst Resume = lazy(() => import('./components/Resume'));\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      textAlign: 'center',\n      fontFamily: 'lato',\n    },\n  }),\n);\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: 'lato',\n    // h1: {\n    //   fontFamily: 'raleway',\n    //   fontStyle: 'bold',\n    // },\n    // h2: {\n    //   fontFamily: 'raleway',\n    //   fontStyle: 'bold',\n    // },\n    // h3: {\n    //   fontFamily: 'raleway',\n    //   fontStyle: 'bold',\n    // },\n  },\n  palette: {\n    primary: {\n      main: '#b21919',\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nfunction App(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <div style={{ display: 'flex', height: '100%' }}>\n        <ThemeProvider theme={theme}>\n          {/* <Navbar /> */}\n          <SamCard />\n          <Container className={classes.content}>\n            <Toolbar />\n            <br />\n            <Suspense fallback={<div>Loading...</div>}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/About\" component={About} />\n                <Route path=\"/Projects\" component={Projects} />\n                <Route path=\"/Skills\" component={Skills} />\n                <Route path=\"/Resume\" component={Resume} />\n              </Switch>\n            </Suspense>\n          </Container>\n        </ThemeProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}